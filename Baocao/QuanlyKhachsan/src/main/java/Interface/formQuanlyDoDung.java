/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Controllers.DoDungController;
import Controllers.PhongController;
import Controllers.ThueTraController;
import Models.DoDungMatHong;
import Models.DoDung;
import Models.DoDungTrongPhong;
import Models.Phong;
import Models.ThueTraPhong;
import java.awt.HeadlessException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ddom6
 */
public class formQuanlyDoDung extends javax.swing.JFrame {

    private String TaiKhoan;
    private String MatKhau;
    private DefaultTableModel defaultTableModelDo;
    private DefaultTableModel defaultTableDoDungTrongPhong;
    private DefaultTableModel defaultTableThue;
    private DefaultTableModel defaultTableDoDungMatHong;

    private DoDungController doDungController;
    private PhongController phongController;
    private ThueTraController thueTraController;

    /**
     * Creates new form fromQuanlyDoDung
     */
    public formQuanlyDoDung() {
        initComponents();
        InsertDataTable();

    }

    public formQuanlyDoDung(String TK, String MK) {
        initComponents();
        this.TaiKhoan = TK;
        this.MatKhau = MK;
        InsertDataTable();
        txtTenDo.setEnabled(false);
        txtDonGia.setEnabled(false);
    }

    public void InsertDataTable() {
        doDungController = new DoDungController();
        phongController = new PhongController();

        defaultTableModelDo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        defaultTableDoDungTrongPhong = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tbDoDung.setModel(defaultTableModelDo);
        defaultTableModelDo.addColumn("Tên đồ dùng");
        defaultTableModelDo.addColumn("Đơn giá");

        tbDoDungTrongPhong.setModel(defaultTableDoDungTrongPhong);
        defaultTableDoDungTrongPhong.addColumn("Phòng");
        defaultTableDoDungTrongPhong.addColumn("Tên đồ dùng");
        defaultTableDoDungTrongPhong.addColumn("Số lượng");

        LoadDataTable();
        txtTenDo.requestFocus();
    }

    public void LoadDataTable() {
        cbTendo.removeAllItems();
        cbTendo.addItem("Chọn");
        List<DoDung> listdoDoDungs = doDungController.GetAllDoDung();

        for (DoDung doDung : listdoDoDungs) {
            defaultTableModelDo.addRow(new Object[]{
                doDung.getTenDo(),
                new BigDecimal(doDung.getDonGia()).longValue(),});

            cbTendo.addItem(doDung.getTenDo());
        }

        cbMaPhongSearch.removeAllItems();
        List<DoDungTrongPhong> listdDoDungTrongPhongs = doDungController.GetAllDoDungTrongPhong();

        for (DoDungTrongPhong doDungTrongPhong : listdDoDungTrongPhongs) {
            defaultTableDoDungTrongPhong.addRow(new Object[]{
                doDungTrongPhong.getTenPhong(),
                doDungTrongPhong.getTenDo(),
                doDungTrongPhong.getSoLuong(),});

            cbMaPhongSearch.addItem(doDungTrongPhong.getMaPhong());
        }

        cbMaPhong.removeAllItems();
        cbMaPhong.addItem("Chọn");
        List<Phong> listphoPhongs = phongController.GetAllPhong();
        for (Phong phong : listphoPhongs) {
            cbMaPhong.addItem(phong.getMaPhong());
        }
    }

    public void clearDataTable() {
        while (defaultTableModelDo.getRowCount() > 0) {
            defaultTableModelDo.removeRow(0);
        }
        while (defaultTableDoDungTrongPhong.getRowCount() > 0) {
            defaultTableDoDungTrongPhong.removeRow(0);
        }
    }

    public void ClearTextField_Do() {
        txtTenDo.setText(null);
        txtDonGia.setText(null);
    }

    public void ClearTextField_DoDungTrongPhong() {
        cbMaPhong.setSelectedIndex(0);
        cbTendo.setSelectedIndex(0);
        spinnerSoLuongDoDungTrongPhong.setValue(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDoDungTrongPhong = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtTenDo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        cbMaPhongSearch = new javax.swing.JComboBox<>();
        rdDoDung = new javax.swing.JRadioButton();
        rdDoDungTungPhong = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnClearText = new javax.swing.JButton();
        spinnerSoLuongDoDungTrongPhong = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        cbTendo = new javax.swing.JComboBox<>();
        cbMaPhong = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDoDung = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnClearText1 = new javax.swing.JButton();
        spinnerSoLuongDoDungHongMat = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        cbTendoHongMat = new javax.swing.JComboBox<>();
        cbMaThue = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        btnRefreshDoDungHongMat = new javax.swing.JButton();
        btnTimKiemDoDungHongMat = new javax.swing.JButton();
        cbMaThueSearch = new javax.swing.JComboBox<>();
        btnXoaDoDungHongMat = new javax.swing.JButton();
        btnSuaDoDungHongMat = new javax.swing.JButton();
        btnThemDoDungHongMat = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbDoDungHongMat = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        btnBack1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbThue = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý đồ dùng");

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đồ dùng từng phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbDoDungTrongPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDoDungTrongPhong.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbDoDungTrongPhong.setCellSelectionEnabled(true);
        tbDoDungTrongPhong.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbDoDungTrongPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDoDungTrongPhongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbDoDungTrongPhong);
        tbDoDungTrongPhong.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đồ dùng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Tên đồ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Đơn giá");

        txtDonGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(txtTenDo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(51, 51, 51)
                        .addComponent(txtDonGia)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenDo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\add.png")); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\refresh.png")); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\bin.png")); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\làm mới.png")); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\search.png")); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        cbMaPhongSearch.setEditable(true);
        cbMaPhongSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        buttonGroup1.add(rdDoDung);
        rdDoDung.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdDoDung.setText("Đồ dùng");
        rdDoDung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdDoDungActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdDoDungTungPhong);
        rdDoDungTungPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdDoDungTungPhong.setSelected(true);
        rdDoDungTungPhong.setText("Đồ dùng từng phòng");
        rdDoDungTungPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdDoDungTungPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(rdDoDung)
                        .addGap(18, 18, 18)
                        .addComponent(rdDoDungTungPhong)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbMaPhongSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdDoDung)
                    .addComponent(rdDoDungTungPhong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbMaPhongSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đồ dùng từng phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Mã phòng");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Số lượng");

        btnClearText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearText.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\eraser.png")); // NOI18N
        btnClearText.setText("Clear");
        btnClearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTextActionPerformed(evt);
            }
        });

        spinnerSoLuongDoDungTrongPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerSoLuongDoDungTrongPhong.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerSoLuongDoDungTrongPhong.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Tên đồ");

        cbTendo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbMaPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(48, 48, 48)
                        .addComponent(cbTendo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(26, 26, 26)
                        .addComponent(cbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(25, 25, 25)
                        .addComponent(spinnerSoLuongDoDungTrongPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClearText, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spinnerSoLuongDoDungTrongPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTendo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\arrow.png")); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel4.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 35));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ ĐỒ DÙNG");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -2, 930, 50));

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đồ dùng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbDoDung.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDoDung.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbDoDung.setCellSelectionEnabled(true);
        tbDoDung.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbDoDung.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDoDungMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbDoDung);
        tbDoDung.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý đồ dùng", jPanel7);

        jPanel8.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jPanel8AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đồ dùng hỏng, mất", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Mã thuê");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Số lượng");

        btnClearText1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearText1.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\eraser.png")); // NOI18N
        btnClearText1.setText("Clear");
        btnClearText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearText1ActionPerformed(evt);
            }
        });

        spinnerSoLuongDoDungHongMat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerSoLuongDoDungHongMat.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerSoLuongDoDungHongMat.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Tên đồ");

        cbTendoHongMat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbMaThue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTendoHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMaThue, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClearText1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(spinnerSoLuongDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(spinnerSoLuongDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMaThue, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTendoHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearText1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        btnRefreshDoDungHongMat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRefreshDoDungHongMat.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\làm mới.png")); // NOI18N
        btnRefreshDoDungHongMat.setText("Làm mới");
        btnRefreshDoDungHongMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDoDungHongMatActionPerformed(evt);
            }
        });

        btnTimKiemDoDungHongMat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiemDoDungHongMat.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\search.png")); // NOI18N
        btnTimKiemDoDungHongMat.setText("Tìm kiếm");
        btnTimKiemDoDungHongMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemDoDungHongMatActionPerformed(evt);
            }
        });

        cbMaThueSearch.setEditable(true);
        cbMaThueSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnXoaDoDungHongMat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoaDoDungHongMat.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\bin.png")); // NOI18N
        btnXoaDoDungHongMat.setText("Xóa");
        btnXoaDoDungHongMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDoDungHongMatActionPerformed(evt);
            }
        });

        btnSuaDoDungHongMat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSuaDoDungHongMat.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\refresh.png")); // NOI18N
        btnSuaDoDungHongMat.setText("Sửa");
        btnSuaDoDungHongMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDoDungHongMatActionPerformed(evt);
            }
        });

        btnThemDoDungHongMat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThemDoDungHongMat.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\add.png")); // NOI18N
        btnThemDoDungHongMat.setText("Thêm");
        btnThemDoDungHongMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDoDungHongMatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThemDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSuaDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoaDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                .addComponent(cbMaThueSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiemDoDungHongMat)
                .addGap(18, 18, 18)
                .addComponent(btnRefreshDoDungHongMat)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbMaThueSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiemDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnRefreshDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThemDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSuaDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoaDoDungHongMat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đồ dùng mất, hỏng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbDoDungHongMat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDoDungHongMat.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbDoDungHongMat.setCellSelectionEnabled(true);
        tbDoDungHongMat.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbDoDungHongMat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDoDungHongMatMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbDoDungHongMat);
        tbDoDungHongMat.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack1.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\arrow.png")); // NOI18N
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        jPanel12.add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 35));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ĐỒ DÙNG HỎNG MẤT");
        jPanel12.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -2, 940, 50));

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách thuê", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbThue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbThue.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbThue.setCellSelectionEnabled(true);
        tbThue.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(tbThue);
        tbThue.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý đồ dùng hỏng, mất", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 967, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        TrangChu trangChu = new TrangChu(TaiKhoan, MatKhau);
        trangChu.setLocationRelativeTo(null);
        trangChu.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void tbDoDungTrongPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDoDungTrongPhongMouseClicked
        // TODO add your handling code here:
        defaultTableDoDungTrongPhong = (DefaultTableModel) tbDoDungTrongPhong.getModel();
        int row = tbDoDungTrongPhong.getSelectedRow();

        String phong = defaultTableDoDungTrongPhong.getValueAt(row, 0).toString();

        String currentPhong = phong;
        String[] parts = currentPhong.split(" ");

        switch ("PH" + parts[1]) {
            case "PH01":
                cbMaPhong.setSelectedIndex(1);
                break;
            case "PH02":
                cbMaPhong.setSelectedIndex(2);
                break;
            case "PH03":
                cbMaPhong.setSelectedIndex(3);
                break;
            case "PH04":
                cbMaPhong.setSelectedIndex(4);
                break;
            case "PH05":
                cbMaPhong.setSelectedIndex(5);
                break;
            case "PH06":
                cbMaPhong.setSelectedIndex(5);
                break;
            case "PH07":
                cbMaPhong.setSelectedIndex(6);
                break;
            case "PH08":
                cbMaPhong.setSelectedIndex(7);
                break;
            case "PH09":
                cbMaPhong.setSelectedIndex(8);
                break;
            case "PH10":
                cbMaPhong.setSelectedIndex(10);
                break;
            case "PH11":
                cbMaPhong.setSelectedIndex(11);
                break;
            case "PH12":
                cbMaPhong.setSelectedIndex(12);
                break;
        }

        String DoDung = defaultTableDoDungTrongPhong.getValueAt(row, 1).toString();
        switch (DoDung) {
            case "Bếp từ":
                cbTendo.setSelectedItem("Bếp từ");
                break;
            case "Bồn cầu":
                cbTendo.setSelectedItem("Bồn cầu");
                break;
            case "Cốc":
                cbTendo.setSelectedItem("Cốc");
                break;
            case "Chăn":
                cbTendo.setSelectedItem("Chăn");
                break;
            case "Đệm":
                cbTendo.setSelectedItem("Đệm");
                break;
            case "Ghế":
                cbTendo.setSelectedItem("Ghế");
                break;
            case "Gối":
                cbTendo.setSelectedItem("Gối");
                break;
            case "Gương nhà tắm":
                cbTendo.setSelectedItem("Gương nhà tắm");
                break;
            case "Gương trang điểm":
                cbTendo.setSelectedItem("Gương trang điểm");
                break;
            case "Máy giặt":
                cbTendo.setSelectedItem("Máy giặt");
                break;
            case "Máy sấy":
                cbTendo.setSelectedItem("Máy sấy");
                break;
            case "Tivi":
                cbTendo.setSelectedItem("Tivi");
                break;
            case "Tủ lạnh":
                cbTendo.setSelectedItem("Tủ lạnh");
                break;
            case "Vòi sen":
                cbTendo.setSelectedItem("Vòi sen");
                break;
            default:
                cbTendo.setSelectedIndex(0);
                break;
        }
        spinnerSoLuongDoDungTrongPhong.setValue(defaultTableDoDungTrongPhong.getValueAt(row, 2));

    }//GEN-LAST:event_tbDoDungTrongPhongMouseClicked

    private void tbDoDungMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDoDungMouseClicked
        // TODO add your handling code here:
        defaultTableModelDo = (DefaultTableModel) tbDoDung.getModel();
        int row = tbDoDung.getSelectedRow();

        txtTenDo.setText(defaultTableModelDo.getValueAt(row, 0).toString());
        txtDonGia.setText(defaultTableModelDo.getValueAt(row, 1).toString());

    }//GEN-LAST:event_tbDoDungMouseClicked

    private void btnClearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTextActionPerformed
        // TODO add your handling code here:
        ClearTextField_DoDungTrongPhong();

    }//GEN-LAST:event_btnClearTextActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        defaultTableModelDo.setRowCount(0);
        defaultTableDoDungTrongPhong.setRowCount(0);
        clearDataTable();
        LoadDataTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            if (rdDoDung.isSelected()) {
                if (txtTenDo.getText().equals("") || txtDonGia.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn thêm đồ dùng " + txtTenDo.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        DoDung doDung = new DoDung();

                        doDung.setTenDo(txtTenDo.getText());
                        doDung.setDonGia(Double.valueOf(txtDonGia.getText()));

                        boolean check = doDungController.ThemDoDung(doDung);
                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_Do();
                        }
                    }
                }
            } else if (rdDoDungTungPhong.isSelected()) {
                if (cbMaPhong.getSelectedItem() == "Chọn" || cbTendo.getSelectedItem() == "Chọn" || (Integer) spinnerSoLuongDoDungTrongPhong.getValue() == 0) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn thêm đồ dùng " + cbTendo.getSelectedItem()
                            + " vào phòng " + cbMaPhong.getSelectedItem() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION
                    );
                    if (confirm == JOptionPane.YES_OPTION) {
                        DoDungTrongPhong doDungTrongPhong = new DoDungTrongPhong();

                        doDungTrongPhong.setMaPhong(cbMaPhong.getSelectedItem().toString());
                        doDungTrongPhong.setTenDo(cbTendo.getSelectedItem().toString());
                        doDungTrongPhong.setSoLuong((Integer) spinnerSoLuongDoDungTrongPhong.getValue());

                        boolean check = doDungController.ThemDoDungTrongPhong(doDungTrongPhong);
                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_DoDungTrongPhong();
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Thêm thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        TrangChu trangChu = new TrangChu(TaiKhoan, MatKhau);
        trangChu.setLocationRelativeTo(null);
        trangChu.setVisible(true);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        try {
            if (rdDoDung.isSelected()) {
                if (txtTenDo.getText().equals("") || txtDonGia.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn sửa đồ dùng " + txtTenDo.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        DoDung doDung = new DoDung();

                        doDung.setTenDo(txtTenDo.getText());
                        doDung.setDonGia(Double.valueOf(txtDonGia.getText()));

                        boolean check = doDungController.SuaDoDung(doDung);
                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_Do();
                        }
                    }
                }
            } else if (rdDoDungTungPhong.isSelected()) {
                if (cbMaPhong.getSelectedItem() == "Chọn" || cbTendo.getSelectedItem() == "Chọn") {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc sửa đồ dùng " + cbTendo.getSelectedItem()
                            + " ở phòng " + cbMaPhong.getSelectedItem() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION
                    );
                    if (confirm == JOptionPane.YES_OPTION) {
                        DoDungTrongPhong doDungTrongPhong = new DoDungTrongPhong();

                        doDungTrongPhong.setMaPhong(cbMaPhong.getSelectedItem().toString());
                        doDungTrongPhong.setTenDo(cbTendo.getSelectedItem().toString());
                        doDungTrongPhong.setSoLuong((Integer) spinnerSoLuongDoDungTrongPhong.getValue());

                        boolean check = doDungController.SuaDoDungTrongPhong(doDungTrongPhong);
                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_DoDungTrongPhong();
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sửa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        try {
            if (rdDoDung.isSelected()) {
                if (txtTenDo.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa đồ dùng " + txtTenDo.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        DoDung doDung = new DoDung();

                        doDung.setTenDo(txtTenDo.getText());

                        boolean check = doDungController.XoaDoDung(doDung);
                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_Do();
                        }
                    }
                }
            } else if (rdDoDungTungPhong.isSelected()) {
                if (cbMaPhong.getSelectedItem() == "Chọn" || cbTendo.getSelectedItem() == "Chọn") {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc xóa đồ dùng " + cbTendo.getSelectedItem()
                            + " ở phòng " + cbMaPhong.getSelectedItem() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION
                    );
                    if (confirm == JOptionPane.YES_OPTION) {
                        DoDungTrongPhong doDungTrongPhong = new DoDungTrongPhong();

                        doDungTrongPhong.setMaPhong(cbMaPhong.getSelectedItem().toString());
                        doDungTrongPhong.setTenDo(cbTendo.getSelectedItem().toString());

                        boolean check = doDungController.XoaDoDungTrongPhong(doDungTrongPhong);
                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_DoDungTrongPhong();
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Xóa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void rdDoDungTungPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdDoDungTungPhongActionPerformed
        // TODO add your handling code here:
        if (rdDoDungTungPhong.isSelected()) {
            txtTenDo.setEnabled(false);
            txtDonGia.setEnabled(false);

            cbMaPhong.setEnabled(true);
            cbTendo.setEnabled(true);
            spinnerSoLuongDoDungTrongPhong.setEnabled(true);
            btnClearText.setEnabled(true);
        }
    }//GEN-LAST:event_rdDoDungTungPhongActionPerformed

    private void rdDoDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdDoDungActionPerformed
        // TODO add your handling code here:
        if (rdDoDung.isSelected()) {
            cbMaPhong.setEnabled(false);
            cbTendo.setEnabled(false);
            spinnerSoLuongDoDungTrongPhong.setEnabled(false);
            btnClearText.setEnabled(false);

            txtTenDo.setEnabled(true);
            txtDonGia.setEnabled(true);
        }
    }//GEN-LAST:event_rdDoDungActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        defaultTableDoDungTrongPhong.setRowCount(0);

        List<DoDungTrongPhong> listdDoDungTrongPhongs = doDungController.SearchDoDungTrongPhong_ByMaPH(cbMaPhongSearch.getSelectedItem().toString());
        for (DoDungTrongPhong doDungTrongPhong : listdDoDungTrongPhongs) {
            defaultTableDoDungTrongPhong.addRow(new Object[]{
                doDungTrongPhong.getTenPhong(),
                doDungTrongPhong.getTenDo(),
                doDungTrongPhong.getSoLuong(),});
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void jPanel8AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanel8AncestorAdded
        // TODO add your handling code here:
        thueTraController = new ThueTraController();

        defaultTableThue = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        defaultTableDoDungMatHong = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tbThue.setModel(defaultTableThue);
        defaultTableThue.addColumn("Mã thuê");
        defaultTableThue.addColumn("Phòng");
        defaultTableThue.addColumn("Khách hàng");
        defaultTableThue.addColumn("Tổng tiền");

        tbDoDungHongMat.setModel(defaultTableDoDungMatHong);
        defaultTableDoDungMatHong.addColumn("Mã thuê");
        defaultTableDoDungMatHong.addColumn("Tên đồ dùng");
        defaultTableDoDungMatHong.addColumn("Số lượng");
        defaultTableDoDungMatHong.addColumn("Tổng tiền");

        LoadDataTable_Tab2();
    }//GEN-LAST:event_jPanel8AncestorAdded

    private void btnClearText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearText1ActionPerformed
        // TODO add your handling code here:
        ClearTextField_tab2();
    }//GEN-LAST:event_btnClearText1ActionPerformed

    private void btnTimKiemDoDungHongMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemDoDungHongMatActionPerformed
        // TODO add your handling code here:
        defaultTableDoDungMatHong.setRowCount(0);

        List<DoDungMatHong> listdodDoDungMatHongs1 = doDungController.SearchAllDoDungHongMat_MaThue(cbMaThueSearch.getSelectedItem().toString());
        for (DoDungMatHong doDungMatHong : listdodDoDungMatHongs1) {
            defaultTableDoDungMatHong.addRow(new Object[]{
                doDungMatHong.getMaThue(),
                doDungMatHong.getTenDo(),
                doDungMatHong.getSoLuong(),
                new BigDecimal(doDungMatHong.getTongTien()).longValue(),});
        }
    }//GEN-LAST:event_btnTimKiemDoDungHongMatActionPerformed

    private void btnRefreshDoDungHongMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDoDungHongMatActionPerformed
        // TODO add your handling code here:
        ClearTextField_tab2();
        clearDataTable_Tab2();
        LoadDataTable_Tab2();
    }//GEN-LAST:event_btnRefreshDoDungHongMatActionPerformed

    private void tbDoDungHongMatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDoDungHongMatMouseClicked
        // TODO add your handling code here:
        defaultTableDoDungMatHong = (DefaultTableModel) tbDoDungHongMat.getModel();
        int row = tbDoDungHongMat.getSelectedRow();

        String MaThue = defaultTableDoDungMatHong.getValueAt(row, 0).toString();

        List<DoDungMatHong> listdodDoDungMatHongs1 = doDungController.GetAllDoDungHongMat_MaThue();
        for (DoDungMatHong doDungMatHong : listdodDoDungMatHongs1) {
            if (listdodDoDungMatHongs1.isEmpty()) {
                cbMaThue.setSelectedIndex(0);

            } else {
                if (MaThue.equals(doDungMatHong.getMaThue())) {
                    cbMaThue.setSelectedItem(MaThue);
                }
            }

        }

        String DoDung = defaultTableDoDungMatHong.getValueAt(row, 1).toString();
        switch (DoDung) {
            case "Bếp từ":
                cbTendoHongMat.setSelectedIndex(1);
                break;
            case "Bồn cầu":
                cbTendoHongMat.setSelectedIndex(2);
                break;
            case "Chăn":
                cbTendoHongMat.setSelectedIndex(3);
                break;
            case "Cốc":
                cbTendoHongMat.setSelectedIndex(4);
                break;
            case "Đệm":
                cbTendoHongMat.setSelectedIndex(5);
                break;
            case "Ghế":
                cbTendoHongMat.setSelectedIndex(6);
                break;
            case "Gối":
                cbTendoHongMat.setSelectedIndex(7);
                break;
            case "Gương nhà tắm":
                cbTendoHongMat.setSelectedIndex(8);
                break;
            case "Gương trang điểm":
                cbTendoHongMat.setSelectedIndex(9);
                break;
            case "Máy giặt":
                cbTendoHongMat.setSelectedIndex(10);
                break;
            case "Máy sấy":
                cbTendoHongMat.setSelectedIndex(11);
                break;
            case "Tivi":
                cbTendoHongMat.setSelectedIndex(12);
                break;
            case "Tủ lạnh":
                cbTendoHongMat.setSelectedIndex(13);
                break;
            case "Vòi sen":
                cbTendoHongMat.setSelectedIndex(14);
                break;
            default:
                cbTendoHongMat.setSelectedIndex(0);
                break;
        }
        spinnerSoLuongDoDungHongMat.setValue(defaultTableDoDungMatHong.getValueAt(row, 2));
    }//GEN-LAST:event_tbDoDungHongMatMouseClicked

    public void LoadDataTable_Tab2() {
        cbMaThue.removeAllItems();
        cbMaThue.addItem("Chọn");
        List<ThueTraPhong> listthuThueTraPhongs = thueTraController.SearchThue_ChuaThanhToan_TenKH_TenPhong();

        for (ThueTraPhong thueTraPhong : listthuThueTraPhongs) {
            defaultTableThue.addRow(new Object[]{
                thueTraPhong.getMaThue(),
                thueTraPhong.getTenPhong(),
                thueTraPhong.getTenKH(),
                new BigDecimal(thueTraPhong.getTongTien()).longValue(),});

            cbMaThue.addItem(thueTraPhong.getMaThue());
        }

        List<DoDungMatHong> listdodDoDungMatHongs = doDungController.GetAllDoDungHongMat();

        for (DoDungMatHong doDungMatHong : listdodDoDungMatHongs) {
            defaultTableDoDungMatHong.addRow(new Object[]{
                doDungMatHong.getMaThue(),
                doDungMatHong.getTenDo(),
                doDungMatHong.getSoLuong(),
                new BigDecimal(doDungMatHong.getTongTien()).longValue(),});

        }

        cbMaThueSearch.removeAllItems();
        List<DoDungMatHong> listdodDoDungMatHongs1 = doDungController.GetAllDoDungHongMat_MaThue();
        for (DoDungMatHong doDungMatHong : listdodDoDungMatHongs1) {
            cbMaThueSearch.addItem(doDungMatHong.getMaThue());

        }

        cbTendoHongMat.removeAllItems();
        cbTendoHongMat.addItem("Chọn");
        List<DoDung> listdoDoDungs = doDungController.GetAllDoDung();

        for (DoDung doDung : listdoDoDungs) {
            cbTendoHongMat.addItem(doDung.getTenDo());
        }
    }

    public void clearDataTable_Tab2() {
        while (defaultTableDoDungMatHong.getRowCount() > 0) {
            defaultTableDoDungMatHong.removeRow(0);
        }
        while (defaultTableThue.getRowCount() > 0) {
            defaultTableThue.removeRow(0);
        }
    }

    public void ClearTextField_tab2() {
        cbMaThue.setSelectedIndex(0);
        cbTendoHongMat.setSelectedIndex(0);
        spinnerSoLuongDoDungHongMat.setValue(0);

    }

    private void btnThemDoDungHongMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDoDungHongMatActionPerformed
        // TODO add your handling code here:
        try {
            if (cbMaThue.getSelectedItem() == "Chọn" || cbTendoHongMat.getSelectedItem() == "Chọn" || (Integer) spinnerSoLuongDoDungHongMat.getValue() == 0) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm đồ dùng '"
                        + cbMaThue.getSelectedItem() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    DoDungMatHong doDungMatHong = new DoDungMatHong();

                    doDungMatHong.setMaThue(cbMaThue.getSelectedItem().toString());
                    doDungMatHong.setTenDo(cbTendoHongMat.getSelectedItem().toString());
                    doDungMatHong.setSoLuong((Integer) spinnerSoLuongDoDungHongMat.getValue());

                    boolean check = doDungController.ThemDoDungMatHong(doDungMatHong);
                    if (check == true) {
                        JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        clearDataTable_Tab2();
                        LoadDataTable_Tab2();
                        ClearTextField_tab2();
                    }
                }
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Thêm thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnThemDoDungHongMatActionPerformed

    private void btnSuaDoDungHongMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDoDungHongMatActionPerformed
        // TODO add your handling code here:
        try {
            if (cbMaThue.getSelectedItem() == "Chọn" || cbTendoHongMat.getSelectedItem() == "Chọn") {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm đồ dùng '"
                        + cbMaThue.getSelectedItem() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    DoDungMatHong doDungMatHong = new DoDungMatHong();

                    doDungMatHong.setMaThue(cbMaThue.getSelectedItem().toString());
                    doDungMatHong.setTenDo(cbTendoHongMat.getSelectedItem().toString());
                    doDungMatHong.setSoLuong((Integer) spinnerSoLuongDoDungHongMat.getValue());

                    boolean check = doDungController.SuaDoDungMatHong(doDungMatHong);
                    if (check == true) {
                        JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        clearDataTable_Tab2();
                        LoadDataTable_Tab2();
                        ClearTextField_tab2();
                    }
                }
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Sửa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnSuaDoDungHongMatActionPerformed

    private void btnXoaDoDungHongMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDoDungHongMatActionPerformed
        // TODO add your handling code here:
        try {
            if (cbMaThue.getSelectedItem() == "Chọn" || cbTendoHongMat.getSelectedItem() == "Chọn" || (Integer) spinnerSoLuongDoDungHongMat.getValue() == 0) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm đồ dùng '"
                        + cbMaThue.getSelectedItem() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    DoDungMatHong doDungMatHong = new DoDungMatHong();

                    doDungMatHong.setMaThue(cbMaThue.getSelectedItem().toString());
                    doDungMatHong.setTenDo(cbTendoHongMat.getSelectedItem().toString());

                    boolean check = doDungController.XoaDoDungMatHong(doDungMatHong);
                    if (check == true) {
                        JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        clearDataTable_Tab2();
                        LoadDataTable_Tab2();
                        ClearTextField_tab2();
                    }
                }
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Xóa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnXoaDoDungHongMatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formQuanlyDoDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formQuanlyDoDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formQuanlyDoDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formQuanlyDoDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                formQuanlyDoDung fQuanlyDoDung = new formQuanlyDoDung();
                fQuanlyDoDung.setLocationRelativeTo(null);
                fQuanlyDoDung.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnClearText;
    private javax.swing.JButton btnClearText1;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefreshDoDungHongMat;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaDoDungHongMat;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemDoDungHongMat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTimKiemDoDungHongMat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaDoDungHongMat;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbMaPhong;
    private javax.swing.JComboBox<String> cbMaPhongSearch;
    private javax.swing.JComboBox<String> cbMaThue;
    private javax.swing.JComboBox<String> cbMaThueSearch;
    private javax.swing.JComboBox<String> cbTendo;
    private javax.swing.JComboBox<String> cbTendoHongMat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdDoDung;
    private javax.swing.JRadioButton rdDoDungTungPhong;
    private javax.swing.JSpinner spinnerSoLuongDoDungHongMat;
    private javax.swing.JSpinner spinnerSoLuongDoDungTrongPhong;
    private javax.swing.JTable tbDoDung;
    private javax.swing.JTable tbDoDungHongMat;
    private javax.swing.JTable tbDoDungTrongPhong;
    private javax.swing.JTable tbThue;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtTenDo;
    // End of variables declaration//GEN-END:variables
}
