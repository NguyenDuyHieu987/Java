/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Controllers.DichVuController;
import Controllers.DoDungController;
import Controllers.ThueTraController;
import Models.DichVuDaThue;
import Models.DoDung;
import Models.DoDungMatHong;
import Models.HoaDon;
import Models.KhachHang;
import Models.ThueTraPhong;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.math.BigDecimal;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFChartSheet;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ADMIN
 */
public class frmThueTraPhong extends javax.swing.JFrame {

    private String Check_mode;
    private String MaPhong;
    private String TaiKhoan;
    private String MatKhau;
    private DefaultTableModel defaultTableModelThue;
    private DefaultTableModel defaultTableModelKhachHang;
    private ThueTraController thueTraController;

    /**
     * Creates new form NewJFrame
     */
    public frmThueTraPhong() {
        initComponents();
        InsertDataTable();
        PopUpMenu();
        btnSave.setEnabled(false);
    }

    public frmThueTraPhong(String TK, String MK, String MaPH, String mode) {
        initComponents();
        this.TaiKhoan = TK;
        this.MatKhau = MK;
        this.MaPhong = MaPH;
        this.Check_mode = mode;
        InsertDataTable();
        PopUpMenu();
        btnSave.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void InsertDataTable() {
        thueTraController = new ThueTraController();
        defaultTableModelThue = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        defaultTableModelKhachHang = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tbThue.setModel(defaultTableModelThue);
        defaultTableModelThue.addColumn("Mã thuê");
        defaultTableModelThue.addColumn("Mã phòng");
        defaultTableModelThue.addColumn("Mã khách hàng");
        defaultTableModelThue.addColumn("Ngày bắt đầu");
        defaultTableModelThue.addColumn("Ngày kết thúc");
        defaultTableModelThue.addColumn("Tổng tiền");
        defaultTableModelThue.addColumn("Trạng thái");
        tbThue.getColumnModel().getColumn(6).setPreferredWidth(100);

        tbKhachHang.setModel(defaultTableModelKhachHang);
        defaultTableModelKhachHang.addColumn("Mã khách hàng");
        defaultTableModelKhachHang.addColumn("Tên khách hàng");
        defaultTableModelKhachHang.addColumn("Số điện thoại");
        defaultTableModelKhachHang.addColumn("Địa chỉ");
        defaultTableModelKhachHang.addColumn("Giới tính");
        tbKhachHang.getColumnModel().getColumn(1).setPreferredWidth(150);

        LoadDataTable();
        txtMaKH.requestFocus();
        cbSearch.setEnabled(false);
    }

    public void LoadDataTable() {
        cbSearch.removeAllItems();
        List<ThueTraPhong> listthuThueTraPhongs = thueTraController.GetAllThueTraPhong();

        for (ThueTraPhong thueTraPhong : listthuThueTraPhongs) {
            defaultTableModelThue.addRow(new Object[]{
                thueTraPhong.getMaThue(),
                thueTraPhong.getMaPhong(),
                thueTraPhong.getMaKH(),
                thueTraPhong.getNgayBD(),
                thueTraPhong.getNgayKT(),
                new BigDecimal(thueTraPhong.getTongTien()).longValue(),
                thueTraPhong.getTrangThai()});

            if (cbTimTheo.getSelectedItem().equals("Mã thuê")) {
                cbSearch.addItem(thueTraPhong.getMaThue());
            } else if (cbTimTheo.getSelectedItem().equals("Mã phòng")) {
                cbSearch.addItem(thueTraPhong.getMaPhong());
            }
        }

        List<KhachHang> listkKhachHangs = thueTraController.GetAllKhachHang();

        for (KhachHang khachHang : listkKhachHangs) {
            defaultTableModelKhachHang.addRow(new Object[]{
                khachHang.getMaKH(),
                khachHang.getTenKH(),
                khachHang.getSDT(),
                khachHang.getDiaChi(),
                khachHang.getGioiTinh(),});

            if (cbTimTheo.getSelectedItem().equals("Mã khách hàng")) {
                cbSearch.addItem(khachHang.getMaKH());
            }
        }

    }

    public void clearDataTable() {
        while (defaultTableModelThue.getRowCount() > 0) {
            defaultTableModelThue.removeRow(0);
        }
        while (defaultTableModelKhachHang.getRowCount() > 0) {
            defaultTableModelKhachHang.removeRow(0);
        }
    }

    public void ClearTextField_KH() {
        txtMaKH.setText(null);
        txtTenKH.setText(null);
        txtSDT.setText(null);
        txtDiaChi.setText(null);
        rdNam.setSelected(true);

    }

    public void setEnable_KH(boolean x) {
        txtMaKH.setEnabled(x);
        txtTenKH.setEnabled(x);
        txtSDT.setEnabled(x);
        txtDiaChi.setEnabled(x);
        rdNam.setEnabled(x);
        rdNu.setEnabled(x);
    }

    public void ClearTextField_Thue() {
        txtMaThue.setText(null);
        txtMaKH_Thue.setText(null);
        txtMaPhong.setText(null);
        txtNgayBD.setText(null);
        txtNgayKT.setText(null);

    }

    public void ClearValueSpinner() {
        spinnerDatUi.setValue(0);
        spinnerGiuTre.setValue(0);
        spinnerKaraoke.setValue(0);
        spinnerCoc.setValue(0);
        spinnerGoi.setValue(0);
        spinnerGhe.setValue(0);
        spinnerMaySay.setValue(0);
        listDoHong_Mat.clearSelection();
    }

    public void setEnable_Thue(boolean x) {
        txtMaThue.setEnabled(x);
        txtMaKH_Thue.setEnabled(x);
        txtMaPhong.setEnabled(x);
        txtNgayBD.setEnabled(x);
        txtNgayKT.setEnabled(x);
    }

    private void PopUpMenu() {
        // TODO add your handling code here:
        if (Check_mode.equals("Check_out")) {
            List<ThueTraPhong> listthThueTraPhongs = thueTraController.GetAllThue_MaPH("PH" + MaPhong);
            for (ThueTraPhong thueTraPhong : listthThueTraPhongs) {

                txtMaThue.setText(thueTraPhong.getMaThue());
                txtMaPhong.setText(thueTraPhong.getMaPhong());
                txtMaKH_Thue.setText(thueTraPhong.getMaKH());
                txtNgayBD.setText(thueTraPhong.getNgayBD());
                txtNgayKT.setText(thueTraPhong.getNgayKT());

            }

            List<KhachHang> listkKhachHangs = thueTraController.GetAllKhachHang_MaPH("PH" + MaPhong);

            for (KhachHang khachHang : listkKhachHangs) {
                txtMaKH.setText(khachHang.getMaKH());
                txtTenKH.setText(khachHang.getTenKH());
                txtSDT.setText(String.valueOf(khachHang.getSDT()));
                txtDiaChi.setText(khachHang.getDiaChi());
                if (khachHang.getGioiTinh().equals("Nam")) {
                    rdNam.setSelected(true);
                } else if (khachHang.getGioiTinh().equals("Nữ")) {
                    rdNu.setSelected(true);
                }

            }
        } else if (Check_mode.equals("Check_in")) {
            txtMaPhong.setText("PH" + MaPhong);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rdNam = new javax.swing.JRadioButton();
        rdNu = new javax.swing.JRadioButton();
        btnClearKH = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtMaThue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        txtMaKH_Thue = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnClearThue = new javax.swing.JButton();
        txtNgayBD = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNgayKT = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        spinnerKaraoke = new javax.swing.JSpinner();
        lbKaraoke = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        spinnerDatUi = new javax.swing.JSpinner();
        lbDonDep = new javax.swing.JLabel();
        lbGiuTre = new javax.swing.JLabel();
        spinnerGiuTre = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        lbMaysay = new javax.swing.JLabel();
        spinnerMaySay = new javax.swing.JSpinner();
        lbGoi = new javax.swing.JLabel();
        spinnerGoi = new javax.swing.JSpinner();
        lbCoc = new javax.swing.JLabel();
        spinnerCoc = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        listDoHong_Mat = new javax.swing.JList<>();
        lbGhe = new javax.swing.JLabel();
        spinnerGhe = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKhachHang = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbThue = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        btnRefresh1 = new javax.swing.JButton();
        btnTimKiem1 = new javax.swing.JButton();
        cbSearch = new javax.swing.JComboBox<>();
        cbTimTheo = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        btnThuePhong = new javax.swing.JButton();
        btnTraPhong = new javax.swing.JButton();
        btnTinhTien = new javax.swing.JButton();
        In = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnRollBack = new javax.swing.JButton();
        rdThue = new javax.swing.JRadioButton();
        btnSua = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        rdKhachHang = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý thuê, trả phòng");

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\arrow.png")); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel4.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 35));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ THUÊ, TRẢ PHÒNG");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -2, 1190, 50));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Mã khách hàng");

        txtMaKH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaKHKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Họ tên");

        txtTenKH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTenKHKeyPressed(evt);
            }
        });

        txtSDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSDTKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Số điện thoại");

        txtDiaChi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiaChi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDiaChiKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Địa chỉ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Giới tính");

        buttonGroup1.add(rdNam);
        rdNam.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdNam.setSelected(true);
        rdNam.setText("Nam");

        buttonGroup1.add(rdNu);
        rdNu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdNu.setText("Nữ");

        btnClearKH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearKH.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\eraser.png")); // NOI18N
        btnClearKH.setText("Clear");
        btnClearKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(rdNam)
                        .addGap(27, 27, 27)
                        .addComponent(rdNu)
                        .addGap(28, 28, 28)
                        .addComponent(btnClearKH))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClearKH))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdNu)
                            .addComponent(rdNam)
                            .addComponent(jLabel6))
                        .addContainerGap())))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin thuê phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Mã thuê");

        txtMaThue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaThue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaThueKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Mã phòng");

        txtMaPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaPhong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaPhongKeyPressed(evt);
            }
        });

        txtMaKH_Thue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaKH_Thue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaKH_ThueKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Mã khách hàng");

        btnClearThue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearThue.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\eraser.png")); // NOI18N
        btnClearThue.setText("Clear");
        btnClearThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearThueActionPerformed(evt);
            }
        });

        txtNgayBD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNgayBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNgayBDKeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Ngày bắt đầu");

        txtNgayKT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Ngày kết thúc");

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Các dịch vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        spinnerKaraoke.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerKaraoke.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        lbKaraoke.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbKaraoke.setText("Karaoke");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("(giờ)");

        spinnerDatUi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerDatUi.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        lbDonDep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDonDep.setText("Dặt ủi và dọn dẹp phòng");

        lbGiuTre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbGiuTre.setText("Giữ trẻ");

        spinnerGiuTre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerGiuTre.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("(giờ)");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("(lần)");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lbDonDep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerDatUi, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lbKaraoke)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerKaraoke, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(lbGiuTre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerGiuTre, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerKaraoke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbKaraoke)
                    .addComponent(jLabel11)
                    .addComponent(lbGiuTre)
                    .addComponent(spinnerGiuTre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerDatUi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDonDep)
                    .addComponent(jLabel18)))
        );

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Đồ bị hỏng, mất", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        lbMaysay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbMaysay.setText("Máy sấy");

        spinnerMaySay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerMaySay.setModel(new javax.swing.SpinnerNumberModel(0, 0, 2, 1));

        lbGoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbGoi.setText("Gối");

        spinnerGoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerGoi.setModel(new javax.swing.SpinnerNumberModel(0, 0, 4, 1));

        lbCoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCoc.setText("Cốc");

        spinnerCoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerCoc.setModel(new javax.swing.SpinnerNumberModel(0, 0, 6, 1));

        jScrollPane4.setMinimumSize(new java.awt.Dimension(151, 66));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(151, 66));

        listDoHong_Mat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listDoHong_Mat.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Tivi", "Tủ lạnh", "Máy giặt", "Bếp từ", "Vòi sen", "Bồn cầu", "Chăn", "Đệm", "Gương trang điểm", "Gương nhà tắm" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(listDoHong_Mat);

        lbGhe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbGhe.setText("Ghế");

        spinnerGhe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerGhe.setModel(new javax.swing.SpinnerNumberModel(0, 0, 4, 1));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(lbMaysay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerMaySay, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(lbCoc)
                        .addGap(38, 38, 38)
                        .addComponent(spinnerCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(lbGoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerGoi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(lbGhe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spinnerGhe, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerMaySay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMaysay)
                    .addComponent(spinnerGoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerGhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGhe)
                    .addComponent(spinnerCoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCoc)))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaKH_Thue, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel12))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNgayKT)
                                            .addComponent(txtNgayBD, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnClearThue)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMaThue, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaThue, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtMaKH_Thue, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearThue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbKhachHang.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbKhachHang.setColumnSelectionAllowed(true);
        tbKhachHang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbKhachHang);
        tbKhachHang.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách thuê phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbThue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbThue.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbThue.setCellSelectionEnabled(true);
        tbThue.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbThueMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbThue);
        tbThue.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
        );

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\bin.png")); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnRefresh1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRefresh1.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\làm mới.png")); // NOI18N
        btnRefresh1.setText("Làm mới");
        btnRefresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh1ActionPerformed(evt);
            }
        });

        btnTimKiem1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem1.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\search.png")); // NOI18N
        btnTimKiem1.setText("Tìm kiếm");
        btnTimKiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem1ActionPerformed(evt);
            }
        });

        cbSearch.setEditable(true);
        cbSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbTimTheo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTimTheo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa thanh toán", "Đã thanh toán", "Mã thuê", "Mã khách hàng", "Mã phòng" }));
        cbTimTheo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTimTheoActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Tìm theo:");

        btnThuePhong.setBackground(new java.awt.Color(153, 255, 153));
        btnThuePhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThuePhong.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\key.png")); // NOI18N
        btnThuePhong.setText("Thuê phòng");
        btnThuePhong.setBorder(null);
        btnThuePhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThuePhongActionPerformed(evt);
            }
        });

        btnTraPhong.setBackground(new java.awt.Color(255, 255, 153));
        btnTraPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTraPhong.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\check-out.png")); // NOI18N
        btnTraPhong.setText("Trả phòng");
        btnTraPhong.setBorder(null);
        btnTraPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraPhongActionPerformed(evt);
            }
        });

        btnTinhTien.setBackground(new java.awt.Color(102, 255, 204));
        btnTinhTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTinhTien.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\money.png")); // NOI18N
        btnTinhTien.setText("Tính tiền");
        btnTinhTien.setBorder(null);
        btnTinhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhTienActionPerformed(evt);
            }
        });

        In.setBackground(new java.awt.Color(255, 153, 102));
        In.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        In.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\printing.png")); // NOI18N
        In.setText("In");
        In.setBorder(null);
        In.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(In, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTinhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThuePhong, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTraPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(cbTimTheo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem1)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh1)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTraPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThuePhong, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTinhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(In, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnRefresh1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbTimTheo, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sửa theo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        btnRollBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRollBack.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\làm mới.png")); // NOI18N
        btnRollBack.setText("Hoàn tác");
        btnRollBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRollBackActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdThue);
        rdThue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdThue.setText("Thuê");

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\refresh.png")); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(102, 102, 255));
        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\bookmark (1).png")); // NOI18N
        btnSave.setText("Lưu");
        btnSave.setBorder(null);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdKhachHang);
        rdKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdKhachHang.setSelected(true);
        rdKhachHang.setText("Khách hàng");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdKhachHang)
                .addGap(18, 18, 18)
                .addComponent(rdThue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRollBack)
                .addGap(51, 51, 51))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdKhachHang)
                    .addComponent(rdThue)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRollBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        TrangChu trangChu = new TrangChu(TaiKhoan, MatKhau);
        trangChu.setLocationRelativeTo(null);
        trangChu.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh1ActionPerformed
        // TODO add your handling code here:
        defaultTableModelThue.setRowCount(0);
        defaultTableModelKhachHang.setRowCount(0);
        clearDataTable();
        LoadDataTable();
    }//GEN-LAST:event_btnRefresh1ActionPerformed

    private void btnTimKiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem1ActionPerformed
        // TODO add your handling code here:
        if (cbTimTheo.getSelectedItem().equals("Chưa thanh toán")) {
            //        clearDataTable();
            defaultTableModelThue.setRowCount(0);
            List<ThueTraPhong> listhuThueTraPhongs = thueTraController.SearchThue_ChuaThanhToan();

            for (ThueTraPhong thueTraPhong : listhuThueTraPhongs) {
                defaultTableModelThue.addRow(new Object[]{
                    thueTraPhong.getMaThue(),
                    thueTraPhong.getMaPhong(),
                    thueTraPhong.getMaKH(),
                    thueTraPhong.getNgayBD(),
                    thueTraPhong.getNgayKT(),
                    thueTraPhong.getTongTien(),
                    thueTraPhong.getTrangThai()});
            }

            defaultTableModelKhachHang.setRowCount(0);
            List<KhachHang> liskhKhachHangs = thueTraController.SearchKhachHang_ChuaThanhToan();

            for (KhachHang khachHang : liskhKhachHangs) {
                defaultTableModelKhachHang.addRow(new Object[]{
                    khachHang.getMaKH(),
                    khachHang.getTenKH(),
                    khachHang.getSDT(),
                    khachHang.getDiaChi(),
                    khachHang.getGioiTinh(),});
            }

        } else if (cbTimTheo.getSelectedItem().equals("Đã thanh toán")) {
            //        clearDataTable();
            defaultTableModelThue.setRowCount(0);
            List<ThueTraPhong> listhuThueTraPhongs = thueTraController.SearchThue_DaThanhToan();

            for (ThueTraPhong thueTraPhong : listhuThueTraPhongs) {
                defaultTableModelThue.addRow(new Object[]{
                    thueTraPhong.getMaThue(),
                    thueTraPhong.getMaPhong(),
                    thueTraPhong.getMaKH(),
                    thueTraPhong.getNgayBD(),
                    thueTraPhong.getNgayKT(),
                    thueTraPhong.getTongTien(),
                    thueTraPhong.getTrangThai()});
            }

            defaultTableModelKhachHang.setRowCount(0);
            List<KhachHang> liskhKhachHangs = thueTraController.SearchKhachHang_DaThanhToan();

            for (KhachHang khachHang : liskhKhachHangs) {
                defaultTableModelKhachHang.addRow(new Object[]{
                    khachHang.getMaKH(),
                    khachHang.getTenKH(),
                    khachHang.getSDT(),
                    khachHang.getDiaChi(),
                    khachHang.getGioiTinh(),});
            }

        } else if (cbTimTheo.getSelectedItem().equals("Mã thuê")) {
            //        clearDataTable();
            defaultTableModelThue.setRowCount(0);
            List<ThueTraPhong> listhuThueTraPhongs = thueTraController.SearchThue_MaThue(cbSearch.getSelectedItem().toString());

            for (ThueTraPhong thueTraPhong : listhuThueTraPhongs) {
                defaultTableModelThue.addRow(new Object[]{
                    thueTraPhong.getMaThue(),
                    thueTraPhong.getMaPhong(),
                    thueTraPhong.getMaKH(),
                    thueTraPhong.getNgayBD(),
                    thueTraPhong.getNgayKT(),
                    thueTraPhong.getTongTien(),
                    thueTraPhong.getTrangThai()});
            }

            defaultTableModelKhachHang.setRowCount(0);
            List<KhachHang> liskhKhachHangs = thueTraController.SearchKhachHang_MaThue(cbSearch.getSelectedItem().toString());

            for (KhachHang khachHang : liskhKhachHangs) {
                defaultTableModelKhachHang.addRow(new Object[]{
                    khachHang.getMaKH(),
                    khachHang.getTenKH(),
                    khachHang.getSDT(),
                    khachHang.getDiaChi(),
                    khachHang.getGioiTinh(),});
            }

        } else if (cbTimTheo.getSelectedItem().equals("Mã khách hàng")) {
            //        clearDataTable();
            defaultTableModelThue.setRowCount(0);
            List<ThueTraPhong> listhuThueTraPhongs = thueTraController.SearchThue_MaKH(cbSearch.getSelectedItem().toString());

            for (ThueTraPhong thueTraPhong : listhuThueTraPhongs) {
                defaultTableModelThue.addRow(new Object[]{
                    thueTraPhong.getMaThue(),
                    thueTraPhong.getMaPhong(),
                    thueTraPhong.getMaKH(),
                    thueTraPhong.getNgayBD(),
                    thueTraPhong.getNgayKT(),
                    thueTraPhong.getTongTien(),
                    thueTraPhong.getTrangThai()});
            }

            defaultTableModelKhachHang.setRowCount(0);
            List<KhachHang> liskhKhachHangs = thueTraController.SearchKhachHang_MaKhachHang(cbSearch.getSelectedItem().toString());

            for (KhachHang khachHang : liskhKhachHangs) {
                defaultTableModelKhachHang.addRow(new Object[]{
                    khachHang.getMaKH(),
                    khachHang.getTenKH(),
                    khachHang.getSDT(),
                    khachHang.getDiaChi(),
                    khachHang.getGioiTinh(),});
            }

        } else if (cbTimTheo.getSelectedItem().equals("Mã phòng")) {
            //        clearDataTable();
            defaultTableModelThue.setRowCount(0);
            List<ThueTraPhong> listhuThueTraPhongs = thueTraController.GetAllThue_MaPH(cbSearch.getSelectedItem().toString());

            for (ThueTraPhong thueTraPhong : listhuThueTraPhongs) {
                defaultTableModelThue.addRow(new Object[]{
                    thueTraPhong.getMaThue(),
                    thueTraPhong.getMaPhong(),
                    thueTraPhong.getMaKH(),
                    thueTraPhong.getNgayBD(),
                    thueTraPhong.getNgayKT(),
                    thueTraPhong.getTongTien(),
                    thueTraPhong.getTrangThai()});
            }

            defaultTableModelKhachHang.setRowCount(0);
            List<KhachHang> liskhKhachHangs = thueTraController.GetAllKhachHang_MaPH(cbSearch.getSelectedItem().toString());

            for (KhachHang khachHang : liskhKhachHangs) {
                defaultTableModelKhachHang.addRow(new Object[]{
                    khachHang.getMaKH(),
                    khachHang.getTenKH(),
                    khachHang.getSDT(),
                    khachHang.getDiaChi(),
                    khachHang.getGioiTinh(),});
            }

        }
    }//GEN-LAST:event_btnTimKiem1ActionPerformed

    private void cbTimTheoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTimTheoActionPerformed
        // TODO add your handling code here:
        cbSearch.removeAllItems();
        if (cbTimTheo.getSelectedItem().equals("Mã thuê") || cbTimTheo.getSelectedItem().equals("Mã khách hàng") || cbTimTheo.getSelectedItem().equals("Mã phòng")) {
            cbSearch.setEnabled(true);

        } else {
            cbSearch.setEnabled(false);
        }

        List<ThueTraPhong> listthuThueTraPhongs = thueTraController.GetAllThueTraPhong();

        for (ThueTraPhong thueTraPhong : listthuThueTraPhongs) {

            if (cbTimTheo.getSelectedItem().equals("Mã thuê")) {
                cbSearch.addItem(thueTraPhong.getMaThue());
            }
        }

        List<KhachHang> listkKhachHangs = thueTraController.GetAllKhachHang();

        for (KhachHang khachHang : listkKhachHangs) {

            if (cbTimTheo.getSelectedItem().equals("Mã khách hàng")) {
                cbSearch.addItem(khachHang.getMaKH());
            }
        }

        for (ThueTraPhong thueTraPhong : listthuThueTraPhongs) {

            if (cbTimTheo.getSelectedItem().equals("Mã phòng")) {
                cbSearch.addItem(thueTraPhong.getMaPhong());
            }
        }
    }//GEN-LAST:event_cbTimTheoActionPerformed

    private void tbThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbThueMouseClicked
        // TODO add your handling code here:
        defaultTableModelThue = (DefaultTableModel) tbThue.getModel();
        int row = tbThue.getSelectedRow();
        txtMaThue.setText(defaultTableModelThue.getValueAt(row, 0).toString());
        txtMaPhong.setText(defaultTableModelThue.getValueAt(row, 1).toString());
        txtMaKH_Thue.setText(defaultTableModelThue.getValueAt(row, 2).toString());
        txtNgayBD.setText(defaultTableModelThue.getValueAt(row, 3).toString());
        txtNgayKT.setText(defaultTableModelThue.getValueAt(row, 4).toString());

        List<KhachHang> liskhKhachHangs = thueTraController.SearchKhachHang_MaThue(defaultTableModelThue.getValueAt(row, 0).toString());

        for (KhachHang khachHang : liskhKhachHangs) {

            txtMaKH.setText(khachHang.getMaKH());
            txtTenKH.setText(khachHang.getTenKH());
            txtSDT.setText(String.valueOf(khachHang.getSDT()));
            txtDiaChi.setText(khachHang.getDiaChi());
            String gender = khachHang.getGioiTinh();
            if (gender.equals("Nam")) {
                rdNam.setSelected(true);
            } else if (gender.equals("Nữ")) {
                rdNu.setSelected(true);
            }
        }

    }//GEN-LAST:event_tbThueMouseClicked

    private void tbKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKhachHangMouseClicked
        // TODO add your handling code here:
        defaultTableModelKhachHang = (DefaultTableModel) tbKhachHang.getModel();
        int row = tbKhachHang.getSelectedRow();
        txtMaKH.setText(defaultTableModelKhachHang.getValueAt(row, 0).toString());
        txtTenKH.setText(defaultTableModelKhachHang.getValueAt(row, 1).toString());
        txtSDT.setText(defaultTableModelKhachHang.getValueAt(row, 2).toString());
        txtDiaChi.setText(defaultTableModelKhachHang.getValueAt(row, 3).toString());
        String gender = defaultTableModelKhachHang.getValueAt(row, 4).toString();
        if (gender.equals("Nam")) {
            rdNam.setSelected(true);
        } else if (gender.equals("Nữ")) {
            rdNu.setSelected(true);
        }

        List<ThueTraPhong> listhuThueTraPhongs = thueTraController.SearchThue_MaKH(defaultTableModelKhachHang.getValueAt(row, 0).toString());

        for (ThueTraPhong thueTraPhong : listhuThueTraPhongs) {

            txtMaThue.setText(thueTraPhong.getMaThue());
            txtMaPhong.setText(thueTraPhong.getMaPhong());
            txtMaKH_Thue.setText(thueTraPhong.getMaKH());
            txtNgayBD.setText(thueTraPhong.getNgayBD());
            txtNgayKT.setText(thueTraPhong.getNgayKT());

        }

    }//GEN-LAST:event_tbKhachHangMouseClicked

    private void txtMaKHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaKHKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtTenKH.requestFocus();
        }
    }//GEN-LAST:event_txtMaKHKeyPressed

    private void txtTenKHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenKHKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtSDT.requestFocus();
        }
    }//GEN-LAST:event_txtTenKHKeyPressed

    private void txtSDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDiaChi.requestFocus();
        }
    }//GEN-LAST:event_txtSDTKeyPressed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        btnSua.setEnabled(false);
        btnSave.setEnabled(true);

        if (rdKhachHang.isSelected()) {
            setEnable_KH(true);
            setEnable_Thue(false);
        } else if (rdThue.isSelected()) {
            setEnable_Thue(true);
            txtMaKH_Thue.setEnabled(false);
            setEnable_KH(false);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        try {

            if (txtMaThue.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn hoặc nhập mã thuê cần xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                List<ThueTraPhong> listthuThueTraPhongs = thueTraController.SearchThue_ChuaThanhToan();
                for (ThueTraPhong thueTraPhong : listthuThueTraPhongs) {
                    if (txtMaThue.getText().equals(thueTraPhong.getMaThue())) {
                        JOptionPane.showMessageDialog(null, "Không được xóa, khách hàng chưa thanh toán", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa thuê có mã " + txtMaKH.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    boolean check = thueTraController.XoaThue(txtMaThue.getText());
                    if (check == true) {
                        JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                        clearDataTable();
                        LoadDataTable();
                        ClearTextField_KH();
                        ClearTextField_Thue();
                        txtMaKH.requestFocus();
                        setEnable_KH(true);
                        setEnable_Thue(true);
                        btnSua.setEnabled(true);
                        btnXoa.setEnabled(true);
                        btnSave.setEnabled(false);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Xóa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        try {
            if (rdKhachHang.isSelected()) {
                if (txtMaKH.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn hoặc nhập mã khách hàng cần chỉnh sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (txtTenKH.getText().equals("") || txtSDT.getText().equals("") || txtDiaChi.getText().equals("") || txtSDT.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    } else {
                        int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn sửa khách hàng có mã " + txtMaKH.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.YES_OPTION) {
                            KhachHang khachHang = new KhachHang();

                            khachHang.setMaKH(txtMaKH.getText());
                            khachHang.setTenKH(txtTenKH.getText());
                            khachHang.setSDT(Integer.valueOf(txtSDT.getText()));
                            khachHang.setDiaChi(txtDiaChi.getText());
                            khachHang.setGioiTinh(rdNam.isSelected() ? "Nam" : "Nữ");

                            boolean check = thueTraController.SuaKhachHang(khachHang);
                            if (check == true) {
                                JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                                clearDataTable();
                                LoadDataTable();
                                ClearTextField_KH();
                                ClearTextField_Thue();
                                txtMaKH.requestFocus();
                                setEnable_KH(true);
                                setEnable_Thue(true);
                                btnSua.setEnabled(true);
                                btnSave.setEnabled(false);

                            }
                        }
                    }
                }
            } else if (rdThue.isSelected()) {
                if (txtMaThue.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn hoặc nhập mã thuê cần chỉnh sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (txtMaPhong.getText().equals("") || txtMaPhong.getText().equals("") || txtNgayBD.getText().equals("") || txtNgayKT.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    } else {
                        int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn sửa thuê có mã " + txtMaKH.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.YES_OPTION) {

                            ThueTraPhong thueTraPhong = new ThueTraPhong();

                            thueTraPhong.setMaThue(txtMaThue.getText());
                            thueTraPhong.setMaPhong(txtMaPhong.getText());
                            thueTraPhong.setNgayBD(txtNgayBD.getText());
                            thueTraPhong.setNgayKT(txtNgayKT.getText());

                            boolean check = thueTraController.SuaThue(thueTraPhong);
                            if (check == true) {
                                JOptionPane.showMessageDialog(null, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                                clearDataTable();
                                LoadDataTable();
                                ClearTextField_KH();
                                ClearTextField_Thue();
                                txtMaKH.requestFocus();
                                setEnable_KH(true);
                                setEnable_Thue(true);
                                btnSua.setEnabled(true);
                                btnSave.setEnabled(false);
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sửa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRollBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRollBackActionPerformed
        // TODO add your handling code here:
        setEnable_KH(true);
        setEnable_Thue(true);
        btnSua.setEnabled(true);
        btnSave.setEnabled(false);

    }//GEN-LAST:event_btnRollBackActionPerformed

    private void txtDiaChiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiaChiKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMaThue.requestFocus();
        }
    }//GEN-LAST:event_txtDiaChiKeyPressed

    private void btnTraPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraPhongActionPerformed
        // TODO add your handling code here:

        try {
            if (txtMaThue.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập hoặc chọn mã thuê để trả phòng", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {

                List<ThueTraPhong> listthuThueTraPhongs = thueTraController.SearchThue_DaThanhToan();
                for (ThueTraPhong thueTraPhong : listthuThueTraPhongs) {
                    if (txtMaThue.getText().equals(thueTraPhong.getMaThue())) {
                        JOptionPane.showMessageDialog(null, "Khách hàng đã thanh toán", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn trả phòng có mã '" + txtMaPhong.getText() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    boolean check = thueTraController.TraPhong(txtMaThue.getText());

                    if (check == true) {
                        JOptionPane.showMessageDialog(null, "Trả phòng thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        //                defaultTableModel.setRowCount(0);
                        clearDataTable();
                        LoadDataTable();
                        ClearTextField_KH();
                        ClearTextField_Thue();
                        txtMaKH.requestFocus();

                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Trả phòng thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnTraPhongActionPerformed

    private void btnThuePhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThuePhongActionPerformed
        // TODO add your handling code here:

        try {
            if (txtMaKH.getText().equals("") || txtTenKH.getText().equals("") || txtSDT.getText().equals("")
                    || txtDiaChi.getText().equals("") || txtMaThue.getText().equals("") || txtMaPhong.getText().equals("")
                    || txtMaKH_Thue.getText().equals("") || txtNgayBD.getText().equals("") || txtNgayKT.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đử thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                if (!txtMaKH.getText().equals(txtMaKH_Thue.getText())) {
                    JOptionPane.showMessageDialog(null, "Mã khách hàng nhập không trùng khớp", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    txtMaKH_Thue.requestFocus();
                } else {
                    List<ThueTraPhong> listhueThueTraPhong1 = thueTraController.GetAllThueTraPhong();
                    for (ThueTraPhong thueTraPhong : listhueThueTraPhong1) {
                        if (txtMaThue.getText().equals(thueTraPhong.getMaThue())) {
                            JOptionPane.showMessageDialog(null, "Mã thuê đã tồn tại", "Thông báo", JOptionPane.WARNING_MESSAGE);
                            txtMaThue.requestFocus();
                            return;
                        }
                    }
                    List<ThueTraPhong> listhueThueTraPhong2 = thueTraController.SearchThue_ChuaThanhToan();
                    for (ThueTraPhong thueTraPhong : listhueThueTraPhong2) {
                        if (txtMaPhong.getText().equals(thueTraPhong.getMaPhong())) {
                            JOptionPane.showMessageDialog(null, "Phòng này đã có người thuê", "Thông báo", JOptionPane.WARNING_MESSAGE);
                            txtMaPhong.requestFocus();
                            return;
                        }
                    }
                    for (ThueTraPhong thueTraPhong : listhueThueTraPhong1) {
                        if (txtMaKH.getText().equals(thueTraPhong.getMaKH())) {
                            JOptionPane.showMessageDialog(null, "Mã khách hàng đã tồn tại", "Thông báo", JOptionPane.WARNING_MESSAGE);
                            txtMaKH.requestFocus();
                            return;
                        }
                    }

                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn thuê phòng có mã '" + txtMaPhong.getText() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        KhachHang khachHang = new KhachHang();

                        khachHang.setMaKH(txtMaKH.getText());
                        khachHang.setTenKH(txtTenKH.getText());
                        khachHang.setSDT(Integer.valueOf(txtSDT.getText()));
                        khachHang.setDiaChi(txtDiaChi.getText());
                        khachHang.setGioiTinh(rdNam.isSelected() ? "Nam" : "Nữ");

                        ThueTraPhong thueTraPhong = new ThueTraPhong();

                        thueTraPhong.setMaThue(txtMaThue.getText());
                        thueTraPhong.setMaPhong(txtMaPhong.getText());
                        thueTraPhong.setMaKH(txtMaKH_Thue.getText());
                        thueTraPhong.setNgayBD(txtNgayBD.getText());
                        thueTraPhong.setNgayKT(txtNgayKT.getText());

                        boolean check_thue = thueTraController.ThuePhong_KhachHang(khachHang);
                        boolean check_kh = thueTraController.ThuePhong_Thue(thueTraPhong);

                        if (check_kh == true && check_thue == true) {
                            JOptionPane.showMessageDialog(null, "Thuê phòng thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                            //                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField_KH();
                            ClearTextField_Thue();
                            txtMaKH.requestFocus();

                        }

                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Thuê phòng thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnThuePhongActionPerformed

    private void txtNgayBDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNgayBDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNgayKT.requestFocus();
        }
    }//GEN-LAST:event_txtNgayBDKeyPressed

    private void btnClearThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearThueActionPerformed
        // TODO add your handling code here:
        ClearTextField_Thue();
        ClearValueSpinner();
        setEnable_Thue(true);
    }//GEN-LAST:event_btnClearThueActionPerformed

    private void txtMaKH_ThueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaKH_ThueKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNgayBD.requestFocus();
        }
    }//GEN-LAST:event_txtMaKH_ThueKeyPressed

    private void txtMaPhongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaPhongKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMaKH_Thue.requestFocus();
        }
    }//GEN-LAST:event_txtMaPhongKeyPressed

    private void txtMaThueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaThueKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMaPhong.requestFocus();
        }
    }//GEN-LAST:event_txtMaThueKeyPressed

    private void btnTinhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhTienActionPerformed
        // TODO add your handling code here:
        try {
            if (txtMaThue.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập hoặc chọn mã thuê để tính tiền", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                List<ThueTraPhong> listhueThueTraPhongs = thueTraController.GetAllThueTraPhong();
                List<String> listMathue = new ArrayList<>();
                for (ThueTraPhong thueTraPhong : listhueThueTraPhongs) {
                    listMathue.add(thueTraPhong.getMaThue());
                }
                if (!listMathue.contains(txtMaThue.getText())) {
                    JOptionPane.showMessageDialog(null, "Khách hàng không tồn tại", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                List<ThueTraPhong> listthuThueTraPhongs1 = thueTraController.SearchThue_DaThanhToan();
                for (ThueTraPhong thueTraPhong1 : listthuThueTraPhongs1) {
                    if (txtMaThue.getText().equals(thueTraPhong1.getMaThue())) {
                        JOptionPane.showMessageDialog(null, "Khách hàng đã thanh toán", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn tính tiền thuê của khách hàng có mã thuê '"
                        + txtMaThue.getText() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    //                    Các dịch vụ
                    List<DichVuDaThue> listdDichVus = new ArrayList<>();

                    if ((Integer) spinnerKaraoke.getValue() > 0) {
                        listdDichVus.add(new DichVuDaThue(lbKaraoke.getText(), (Integer) spinnerKaraoke.getValue()));
                    }
                    if ((Integer) spinnerDatUi.getValue() > 0) {
                        listdDichVus.add(new DichVuDaThue(lbDonDep.getText(), (Integer) spinnerDatUi.getValue()));
                    }
                    if ((Integer) spinnerGiuTre.getValue() > 0) {
                        listdDichVus.add(new DichVuDaThue(lbGiuTre.getText(), (Integer) spinnerGiuTre.getValue()));
                    }

//                    Đồ bị hỏng, mất
                    List<DoDungMatHong> listdoDoDungMatHongs = new ArrayList<>();
                    if ((Integer) spinnerMaySay.getValue() > 0) {
                        listdoDoDungMatHongs.add(new DoDungMatHong(lbMaysay.getText(), (Integer) spinnerMaySay.getValue()));
                    }
                    if ((Integer) spinnerCoc.getValue() > 0) {
                        listdoDoDungMatHongs.add(new DoDungMatHong(lbCoc.getText(), (Integer) spinnerCoc.getValue()));
                    }
                    if ((Integer) spinnerGoi.getValue() > 0) {
                        listdoDoDungMatHongs.add(new DoDungMatHong(lbGoi.getText(), (Integer) spinnerGoi.getValue()));
                    }
                    if ((Integer) spinnerGhe.getValue() > 0) {
                        listdoDoDungMatHongs.add(new DoDungMatHong(lbGhe.getText(), (Integer) spinnerGhe.getValue()));
                    }

                    List<String> listDoDung = listDoHong_Mat.getSelectedValuesList();

                    for (int i = 0; i < listDoDung.size(); i++) {
                        listdoDoDungMatHongs.add(new DoDungMatHong(listDoDung.get(i), 1));
                    }

                    DichVuController dichVuController = new DichVuController();
                    boolean check = dichVuController.ThueDichVu(listdDichVus, txtMaThue.getText());
                    DoDungController doDungController = new DoDungController();
                    boolean check1 = doDungController.UpdateDoDungHong(listdoDoDungMatHongs, txtMaThue.getText());

                    if (check == true && check1 == true) {
                        JOptionPane.showMessageDialog(null, "Tính tiền thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        //                defaultTableModel.setRowCount(0);
                        clearDataTable();
                        LoadDataTable();
                        ClearTextField_KH();
                        ClearTextField_Thue();
                        ClearValueSpinner();
                        txtMaKH.requestFocus();

                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tính tiền thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnTinhTienActionPerformed

    private void btnClearKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearKHActionPerformed
        // TODO add your handling code here:
        ClearTextField_KH();
        setEnable_KH(true);
    }//GEN-LAST:event_btnClearKHActionPerformed

    private void InActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InActionPerformed
        // TODO add your handling code here:
        try {
            if (txtMaThue.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập hoặc chọn mã thuê", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                List<ThueTraPhong> listhueThueTraPhong = thueTraController.SearchThue_ChuaThanhToan();
                for (ThueTraPhong thueTraPhong : listhueThueTraPhong) {
                    if (txtMaThue.getText().equals(thueTraPhong.getMaThue())) {
                        JOptionPane.showMessageDialog(null, "Khách hàng chưa thanh toán", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        txtMaThue.requestFocus();
                        return;
                    }
                }
                JFileChooser fileChooser = new JFileChooser("D:\\xls");
                fileChooser.setDialogTitle("Save as");
                // chọn định dạng files excel
                FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("FILE EXCELS", "xlsx", "xls");
                fileChooser.setFileFilter(extensionFilter);
                int extenchooser = fileChooser.showSaveDialog(null);
                FileOutputStream fileOutputStream = null;
                BufferedOutputStream bos = null;
                XSSFWorkbook excelJtable = null;
                if (extenchooser == JFileChooser.APPROVE_OPTION) {

                    try {
                        // import excel poi libraries to netbeans
                        excelJtable = new XSSFWorkbook();
                        XSSFSheet fSheet = excelJtable.createSheet("HÓA ĐƠN");
                        defaultTableModelThue = (DefaultTableModel) tbThue.getModel();
                        int row = tbThue.getSelectedRow();
                        XSSFRow fRow = fSheet.createRow(0);

                        List<String> listhoDons = thueTraController.InHoaDon(txtMaThue.getText());
                        for (int i = 0; i < listhoDons.size(); i++) {
                            XSSFCell cell = fRow.createCell(i);

                            cell.setCellValue(listhoDons.get(i));
                        }

                        // mở file kiểu nguyên thủy này giúp mở file có kí tự
                        fileOutputStream = new FileOutputStream(fileChooser.getSelectedFile() + ".xlsx");
                        // dùng bộ nhớ điệm để lưu dữ liệu giúp cho việc xuất dữ liệu ko thông qua luồng trực tiếp mà thông qua luồng đệm nên lấy dự liệu nhanh hơn
                        bos = new BufferedOutputStream(fileOutputStream);
                        try {
                            excelJtable.write(bos);
                        } catch (IOException ex) {
                            Logger.getLogger(frmThueTraPhong.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null, "XUẤT FILE EXCEL THÀNH CÔNG");
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(frmThueTraPhong.class.getName()).log(Level.SEVERE, null, ex);
                    } finally {
                        try {
                            if (bos != null) {
                                bos.close();
                            }
                            if (fileOutputStream != null) {
                                fileOutputStream.close();
                            }
                            if (excelJtable != null) {
                                excelJtable.close();
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "In thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_InActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmThueTraPhong.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmThueTraPhong.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmThueTraPhong.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmThueTraPhong.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmThueTraPhong fThueTraPhong = new frmThueTraPhong("", "", "", "");
                fThueTraPhong.setLocationRelativeTo(null);
                fThueTraPhong.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton In;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClearKH;
    private javax.swing.JButton btnClearThue;
    private javax.swing.JButton btnRefresh1;
    private javax.swing.JButton btnRollBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThuePhong;
    private javax.swing.JButton btnTimKiem1;
    private javax.swing.JButton btnTinhTien;
    private javax.swing.JButton btnTraPhong;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JComboBox<String> cbTimTheo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbCoc;
    private javax.swing.JLabel lbDonDep;
    private javax.swing.JLabel lbGhe;
    private javax.swing.JLabel lbGiuTre;
    private javax.swing.JLabel lbGoi;
    private javax.swing.JLabel lbKaraoke;
    private javax.swing.JLabel lbMaysay;
    private javax.swing.JList<String> listDoHong_Mat;
    private javax.swing.JRadioButton rdKhachHang;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.JRadioButton rdThue;
    private javax.swing.JSpinner spinnerCoc;
    private javax.swing.JSpinner spinnerDatUi;
    private javax.swing.JSpinner spinnerGhe;
    private javax.swing.JSpinner spinnerGiuTre;
    private javax.swing.JSpinner spinnerGoi;
    private javax.swing.JSpinner spinnerKaraoke;
    private javax.swing.JSpinner spinnerMaySay;
    private javax.swing.JTable tbKhachHang;
    private javax.swing.JTable tbThue;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaKH_Thue;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtMaThue;
    private javax.swing.JTextField txtNgayBD;
    private javax.swing.JTextField txtNgayKT;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKH;
    // End of variables declaration//GEN-END:variables
}
